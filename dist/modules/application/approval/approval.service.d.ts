import { ApprovalResponseDto, CreateDraftDocumentDto } from './dtos';
import { CreateDraftUseCase } from './usecases/approval/create-draft.usecase';
import { PaginationQueryDto } from 'src/common/dtos/pagination-query.dto';
import { PaginationData } from 'src/common/dtos/pagination-response.dto';
import { DocumentListType } from 'src/common/enums/approval.enum';
import { Employee } from 'src/database/entities';
import { ApproveStepUseCase } from './usecases/approval/approve-step.usecase';
import { ApproveDocumentUseCase } from './usecases/approval/approve-document.usecase';
import { CheckStepsUseCase } from './usecases/approval/check-steps.usecase';
import { GetMyStepUseCase } from './usecases/approval/get-my-step.usecase';
import { RejectStepUseCase } from './usecases/approval/reject-step.usecase';
import { RejectDocumentUseCase } from './usecases/approval/reject-document.usecase';
import { SetStepCurrentUseCase } from './usecases/approval/set-step-current.usecase';
import { GetApprovalDocumentsUseCase } from './usecases/approval/get-approval-documents.usecase';
import { DataSource } from 'typeorm';
import { CreateApproveStepUseCase } from './usecases/approval/create-approve-step.usecase';
export declare class ApprovalService {
    private readonly dataSource;
    private readonly createDraftUseCase;
    private readonly approveStepUseCase;
    private readonly approveDocumentUseCase;
    private readonly checkStepsUseCase;
    private readonly getMyStepUseCase;
    private readonly rejectStepUseCase;
    private readonly rejectDocumentUseCase;
    private readonly setStepCurrentUseCase;
    private readonly getApprovalDocumentsUseCase;
    private readonly createApproveStepUseCase;
    constructor(dataSource: DataSource, createDraftUseCase: CreateDraftUseCase, approveStepUseCase: ApproveStepUseCase, approveDocumentUseCase: ApproveDocumentUseCase, checkStepsUseCase: CheckStepsUseCase, getMyStepUseCase: GetMyStepUseCase, rejectStepUseCase: RejectStepUseCase, rejectDocumentUseCase: RejectDocumentUseCase, setStepCurrentUseCase: SetStepCurrentUseCase, getApprovalDocumentsUseCase: GetApprovalDocumentsUseCase, createApproveStepUseCase: CreateApproveStepUseCase);
    createDraft(user: Employee, draftData: CreateDraftDocumentDto): Promise<string>;
    approve(user: Employee, documentId: string): Promise<void>;
    reject(user: Employee, documentId: string): Promise<void>;
    implementation(user: Employee, documentId: string): Promise<void>;
    reference(user: Employee, documentId: string): Promise<void>;
    getApprovalDocuments(user: Employee, query: PaginationQueryDto, listType: DocumentListType): Promise<PaginationData<ApprovalResponseDto>>;
    createTestData(): Promise<void>;
}
